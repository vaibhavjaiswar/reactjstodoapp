{"version":3,"sources":["TodoItem.js","TodoList.js","DemoApp/DemoTodoItem.js","DemoApp/DemoApp.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","props","updateStatus","idStr","todoStr","status","todo","document","getElementById","classList","add","axios","post","id","do","done","then","res","remove","reloadList","catch","err","console","log","className","onClick","title","delete","TodoList","useState","todoList","setTodoList","loading","setLoading","useEffect","get","data","todoAdded","map","_id","to","doStr","setTimeout","deleteTodo","DemoApp","setTodo","count","setCount","DB","item","temp","splice","type","value","onChange","e","target","preventDefault","alert","push","i","App","newTodo","setNewTodo","path","todoItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b450b23e.chunk.js","sourcesContent":["import React from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction TodoItem(props) {\r\n\r\n  const updateStatus = (idStr, todoStr, status) => {\r\n  \tconst todo = document.getElementById(idStr)\r\n\t\t// todo.classList.remove(`fa-${status?'check':'warning'}`)\r\n\t\ttodo.classList.add('fa-spinner')\r\n\t\ttodo.classList.add('fa-spin')\r\n\t\t// todo.classList.add('progress-cursor')\r\n\t\t\r\n\t\taxios.post('http://localhost:999/api/todo/update', {id: idStr, do: todoStr, done: !status})\r\n\t\t  .then(res => {\r\n\t\t\t\ttodo.classList.remove('fa-spinner')\r\n\t\t\t\ttodo.classList.remove('fa-spin')\r\n\t\t\t\t// todo.classList.remove('progress-cursor')\r\n\t\t  \t// todo.classList.add(`fa-${status?'check':'warning'}`)\r\n\t\t  \tprops.reloadList()\r\n\t\t  })\r\n\t\t  .catch(err => console.log(err))\r\n  }\r\n\r\n  const deleteTodo = (id) => {\r\n\r\n\t\taxios.delete('http://localhost:999/api/todo/delete/'+id)\r\n\t\t\t.then(res => props.reloadList())\r\n\t\t\t.catch(err => console.log(err))\r\n\r\n  }\r\n  \r\n  return (\r\n\t<div className='todo-item'>\r\n\t  <span>&emsp;{props.do}</span>\r\n\t  <div>\r\n\t  {\r\n\t\tprops.done?\r\n\t\t<button onClick={() => updateStatus(props.id, props.do, props.done)} className='done-btn-done' title='Already Done.'>\r\n\t\t\t<i id={props.id} className='fa fa-check'></i>\r\n\t\t</button>:\r\n\t\t<button onClick={() => updateStatus(props.id, props.do, props.done)} className='done-btn-notdone' title='Mark as Done.'>\r\n\t\t\t<i id={props.id} className='fa fa-warning'></i>\r\n\t\t</button>\r\n\t  }\r\n\t  <button onClick={() => deleteTodo(props.id)} className='delete-btn' title='Delete this Todo.'><i className='fa fa-trash'></i></button>\r\n\t</div>\r\n\t</div>\r\n  )\r\n}\r\n\r\nexport default TodoItem","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport TodoItem from './TodoItem'\r\n\r\nfunction TodoList(props) {\r\n\r\n  const [todoList, setTodoList] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:999/api/todo/')\r\n      .then(res => setTodoList(res.data))\r\n      .then(() => setLoading(false))\r\n      .catch(err => console.log(err))\r\n\r\n    if(props.todoAdded) {\r\n      reloadList()\r\n    }\r\n  }, [props])\r\n\r\n  const reloadList = () => {\r\n    axios.get('http://localhost:999/api/todo/')\r\n      .then(res => setTodoList(res.data))\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  return (\r\n    <div id=\"todo-list\">\r\n      <h3>Current Todo List</h3>\r\n      <div id=\"hints\">\r\n        <div>\r\n          <button className=\"done-btn-done\"><i className=\"fa fa-check\"></i></button><h4>Done</h4>\r\n        </div>\r\n        <div>\r\n          <button className=\"done-btn-notdone\"><i className=\"fa fa-warning\"></i></button><h4>To be done</h4>\r\n        </div>\r\n        <div>\r\n          <button className=\"delete-btn\"><i className=\"fa fa-trash\"></i></button><h4>Delete</h4>\r\n        </div>\r\n      </div>\r\n      {\r\n        loading ?\r\n        <div id=\"loading\">Loading...<i className=\"fa fa-spinner fa-spin\"></i></div> :\r\n        todoList.map(data => <TodoItem do={data.do} done={data.done} key={data._id} id={data._id} reloadList={reloadList} />)\r\n      }\r\n      <div id=\"clientside-todo\">\r\n        <h4><Link to=\"/demo-app\">If not loading click here for Client Side version (for demo purpose).</Link></h4>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoList","import React from 'react'\r\n\r\nfunction TodoItem(props) {\r\n\r\n  const updateStatus = (id, doStr, done) => {\r\n  \tconst todo = document.getElementById(id)\r\n\ttodo.classList.add('fa-spinner')\r\n\ttodo.classList.add('fa-spin')\r\n\tsetTimeout(() => {\r\n\t  \t// console.log(\"Update Status Item\", id, doStr, done)\r\n\t  \tprops.updateStatus(id, {\"do\": doStr, \"done\": done})\r\n\t  \ttodo.classList.remove('fa-spinner')\r\n\t\ttodo.classList.remove('fa-spin')\r\n\t}, 1000)\r\n  }\r\n\r\n  const deleteTodo = (id) => {\r\n  \tprops.deleteTodo(id)\r\n  }\r\n  \r\n  return (\r\n\t<div className='todo-item'>\r\n\t  <span>&emsp;{props.do}</span>\r\n\t  <div>\r\n\t  {\r\n\t\tprops.done?\r\n\t\t<button onClick={() => updateStatus(props.id, props.do, props.done)} className='done-btn-done' title='Already Done.'>\r\n\t\t\t<i id={props.id} className='fa fa-check'></i>\r\n\t\t</button>:\r\n\t\t<button onClick={() => updateStatus(props.id, props.do, props.done)} className='done-btn-notdone' title='Mark as Done.'>\r\n\t\t\t<i id={props.id} className='fa fa-warning'></i>\r\n\t\t</button>\r\n\t  }\r\n\t  <button onClick={() => deleteTodo(props.id)} className='delete-btn' title='Delete this Todo.'><i className='fa fa-trash'></i></button>\r\n\t</div>\r\n\t</div>\r\n  )\r\n}\r\n\r\nexport default TodoItem","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport TodoItem from './DemoTodoItem'\r\n// import TodoList from './DemoTodoList'\r\n\r\nfunction DemoApp() {\r\n\r\n\tconst [todo, setTodo] = useState('')\r\n\tconst [todoList, setTodoList] = useState([])\r\n\tconst [loading, setLoading] = useState(true)\r\n\tconst [count, setCount] = useState(0)\r\n\r\n\tlet DB = [\r\n\t{\"do\" : \"Withdraw money from ATM.\", \"done\" : true },\r\n\t{\"do\" : \"Buy Blue Paint.\", \"done\" : true },\r\n\t{\"do\" : \"Wake up at 6:00 AM.\", \"done\" : true },\r\n\t{\"do\" : \"Send mails...\", \"done\" : false },\r\n\t{\"do\" : \"Paint the home.\", \"done\" : true },\r\n\t{\"do\" : \"Learn MERN.\", \"done\" : false },\r\n\t{\"do\" : \"Complete this Todo Demo.\", \"done\" : true }\r\n\t]\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetTodoList(DB)\r\n\t\t\tsetLoading(false)\r\n\t\t}, 1000)\r\n\t},[])\r\n\r\n\tconst changeTodo = (e) => {\r\n\t\tsetTodo(e.target.value)\r\n\t}\r\n\r\n\tconst submitForm = (e) => {\r\n\t\te.preventDefault()\r\n\t\tlet todo = document.getElementById('todo-str').value\r\n\r\n\t\tif(todo === '') {\r\n\t\t\talert('Todo description required.')\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetTodo(todo)\r\n\t\t\tdocument.getElementById('todo-str').value = \"\"\r\n\t\t\tlet temp = todoList\r\n\t\t\ttemp.push({\"do\": todo, \"done\": false})\r\n\t\t\tconsole.log(temp)\r\n\t\t\tconsole.log(todoList)\r\n\t\t\tsetTodoList(temp)\r\n\t\t    setCount(count+1)\r\n\t\t}, 500)\r\n\t}\r\n\r\n\tconst updateStatus = (id, item) => {\r\n\t    // console.log(\"Update status List\", item)\r\n\t    let temp = todoList\r\n\t    // console.log(\"Temp Todo List\", temp[id])\r\n\t    temp[id] = {\"do\": item.do, \"done\": !item.done}\r\n\t    // console.log(\"Now temp will be\", temp[id])\r\n\t    setTodoList(temp)\r\n\t    // console.log(\"New Todo List\", todoList[id])\r\n\t    setCount(count+1)\r\n\t}\r\n\r\n\tconst deleteTodo = (id) => {\r\n\t\tlet temp = todoList\r\n\t\ttemp.splice(id, 1)\r\n\t\tsetTodoList(temp)\r\n\t\tsetCount(count+1)\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div id=\"App\">\r\n\t\t<header>\r\n\t\t\t<h1>Todo List App (Demo)</h1>\r\n\t\t</header>\r\n\t\t<main>\r\n\t\t<div id=\"todo-form\">\r\n\t\t<h3>Add into Todo List</h3>\r\n\t\t<form id=\"todoForm\">\r\n\t\t\t<label>Todo description : </label><br/>\r\n\t\t\t<div>\r\n\t\t\t<input id=\"todo-str\" type=\"text\" value={todo} onChange={changeTodo} />\r\n\t\t\t<button id=\"submit-btn\" onClick={submitForm}>Add Todo</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t\t</div>\r\n\t\t<div id=\"todo-list\">\r\n\t\t<h3>Current Todo List</h3>\r\n\t\t<div id=\"hints\">\r\n\t\t<div>\r\n\t\t\t<button className=\"done-btn-done\"><i className=\"fa fa-check\"></i></button><h4>Done</h4>\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<button className=\"done-btn-notdone\"><i className=\"fa fa-warning\"></i></button><h4>To be done</h4>\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<button className=\"delete-btn\"><i className=\"fa fa-trash\"></i></button><h4>Delete</h4>\r\n\t\t</div>\r\n\t\t</div>\r\n\t\t{\r\n\t\t\tloading ?\r\n\t\t\t<div id=\"loading\">Loading...<i className=\"fa fa-spinner fa-spin\"></i></div> :\r\n\t\t\ttodoList.map((data,i) => <TodoItem do={data.do} done={data.done} key={i} id={i}\r\n\t\t\t\tupdateStatus={updateStatus}\r\n\t\t\t\tdeleteTodo={deleteTodo}\r\n\t\t\t\tcount={count} />)\r\n\t\t}\r\n\t\t<div id=\"clientside-todo\">\r\n\t\t<h4><Link to=\"/\">Click here to return to Original.</Link></h4>\r\n\t\t</div>\r\n\t\t</div>\r\n\t\t</main>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DemoApp","import React, {useState} from 'react';\nimport axios from 'axios'\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport './App.css';\nimport TodoList from './TodoList'\nimport DemoApp from './DemoApp/DemoApp'\n\nfunction App() {\n  \n  const [todo, setTodo] = useState('')\n  const [newTodo, setNewTodo] = useState(false)\n\n  const setTodoText = (e) => {\n    setTodo(e.target.value)\n  }\n\n  const submitForm = (e) => {\n    e.preventDefault()\n\n    if(todo === '') {\n      alert('Todo description required.')\n      return false\n    }\n\n    const todoItem = {\n      do: todo,\n      done: false\n    }\n\n    axios.post('http://localhost:999/api/todo/addtodo', todoItem)\n      .catch(err => console.log(err))\n      .then(() => {\n        setTodo('')\n        setNewTodo(true)\n      })\n\n  }\n\n  return (\n    <BrowserRouter>\n    <Switch>\n    <Route path=\"/demo-app\">\n      <DemoApp />\n    </Route>\n    <Route path=\"/\">\n      <div id=\"App\">\n        <header>\n          <h1>Todo List App</h1>\n        </header>\n        <main>\n          <div id=\"todo-form\">\n            <h3>Add into Todo List</h3>\n            <form id=\"todoForm\">\n              <label>Todo description : </label><br/>\n              <div>\n              <input type=\"text\" value={todo} onChange={setTodoText} />\n              <button id=\"submit-btn\" onClick={submitForm}>Add Todo</button>\n              </div>\n            </form>\n          </div>\n          <TodoList todoAdded={newTodo} />\n        </main>\n      </div>\n    </Route>\n    </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}